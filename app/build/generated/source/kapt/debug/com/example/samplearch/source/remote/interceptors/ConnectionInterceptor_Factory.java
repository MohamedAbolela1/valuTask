// Generated by Dagger (https://dagger.dev).
package com.example.samplearch.source.remote.interceptors;

import com.example.samplearch.utils.validation.network.NetworkValidator;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ConnectionInterceptor_Factory implements Factory<ConnectionInterceptor> {
  private final Provider<NetworkValidator> networkValidatorProvider;

  public ConnectionInterceptor_Factory(Provider<NetworkValidator> networkValidatorProvider) {
    this.networkValidatorProvider = networkValidatorProvider;
  }

  @Override
  public ConnectionInterceptor get() {
    return newInstance(networkValidatorProvider.get());
  }

  public static ConnectionInterceptor_Factory create(
      Provider<NetworkValidator> networkValidatorProvider) {
    return new ConnectionInterceptor_Factory(networkValidatorProvider);
  }

  public static ConnectionInterceptor newInstance(NetworkValidator networkValidator) {
    return new ConnectionInterceptor(networkValidator);
  }
}
